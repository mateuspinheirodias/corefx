parameters:
  # Required: Name to display for this job in the UI
  displayName: ''
  
  # Required: Name for this specific job -- should be unique per each job.
  name: ''

  # Required: Pool to run the job on.
  pool: {}

  # Required: TargetOS value to know what script commands to use
  # Accepted values:
  # - Windows_NT
  # - Linux
  # - OSX
  # - FreeBSD
  targetOS: ''

  # Required: Strategy matrix (the matrix that we're going to build for this job)
  # The following variables should be defined within the matrix:
  #   matrix:
  #     matrix_display_name:
  #      configuration: Debug | Release
  #      architecture: x64 | x86 | arm | arm64
  #      framework: (netcoreapp, netfx, uap, etc).
  #      helixQueues: Windows.Amd64 (Only needed if submitToHelix -> true.) -- Queues should be separated by + if multiple.
  strategy: {}

  # Optional: string to append to Unix build script.
  #   buildScriptPrefix: 'HOME=/home/ ' -> 'HOME=/home/ ./build.sh ...'
  buildScriptPrefix: ''

  # Optional: container resource name declared in source template.
  container: ''

  # Optional: a list of steps to run instead of the common build steps.
  # If this is specified, useCustomBuildSteps should be set to true.
  customBuildSteps: []
  
  # Optional: steps to be executed before common build steps.
  # In example, to install build dependencies, or setup an environment.
  preBuildSteps: []

  # Optional
  # Default: true
  # true -- tests are built, but not run.
  # false -- tests are built and run in the build machine.
  skipTests: true

  # Optional: Value to know if it should submit tests payloads to helix.
  # Default: true
  submitToHelix: true

  # Optional: Value to know if it should test outerloop tests
  # Default: false
  testOuterloop: false

  # Optional: Timeout for the job in minutes
  # Default: 120
  timeoutInMinutes: 120

  # Optional: Value to specify if the build should run custom steps.
  # Default: false
  # When true, customBuildSteps should be populated with the steps to run.
  useCustomBuildSteps: false

jobs:
  - job: ${{ parameters.name }}
    variables:
      # OS Specific commands
      ${{ if eq(parameters.targetOS, 'Windows_NT') }}:
        _buildScript: build.cmd -ci
        _msbuildCommand: powershell -ExecutionPolicy ByPass -NoProfile eng\common\msbuild.ps1 -warnaserror:0 -ci
      ${{ if ne(parameters.targetOS, 'Windows_NT') }}:
        _buildScript: ${{ parameters.buildScriptPrefix }}./build.sh --ci
        _msbuildCommand: ${{ parameters.buildScriptPrefix }}./eng/common/msbuild.sh --warnaserror false --ci

    displayName: ${{ parameters.displayName }}
    timeoutInMinutes: ${{ parameters.timeoutInMinutes }}
    pool:
      ${{ insert }}: ${{ parameters.pool }}
    
    ${{ if ne(parameters.strategy, '') }}:
      strategy:
        maxParallel: 99
        ${{ insert }}: ${{ parameters.strategy }}

    container: ${{ parameters.container }}

    steps:
      - ${{ parameters.preBuildSteps }}

      - ${{ if eq(parameters.useCustomBuildSteps, 'false') }}:
        - script: $(_buildScript)
                -includetests
                -framework $(framework)
                /p:ArchGroup=$(architecture)
                /p:ConfigurationGroup=$(configuration)
                /p:SkipTests=${{ parameters.skipTests }}
                /p:ArchiveTests=${{ parameters.submitToHelix }}
                /p:Outerloop=${{ parameters.testOuterloop }}
                ${{ parameters.buildExtraArguments }}
          displayName: Build Sources and Tests
    
      - ${{ if eq(parameters.useCustomBuildSteps, 'true') }}:
        - ${{ parameters.customBuildSteps }}

      - ${{ if eq(parameters.submitToHelix, 'true') }}:
        - template: /eng/pipelines/helix.yml
          parameters:
            targetOS: ${{ parameters.targetOS }}
            archGroup: $(architecture)
            configuration: $(configuration)
            helixQueues: $(helixQueues)
            msbuildScript: $(_msbuildCommand)
            framework: $(framework)
